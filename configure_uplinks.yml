---
- name: Configure uplinks from ESXi host
  hosts: "{{ apic }}"
  connection: local
  gather_facts: no
  vars_files:
    - ./vars/configure_uplinks_vars.yml
    - ./credentials/aci_credentials.yml


  tasks:

    # - name: Get available leaf switch pairs
    #   #GET {{apic}}/node/class/fabricNodePEp.json
    #   aci_switch_policy_vpc_protection_group:
    #     host: "{{ inventory_hostname }}"
    #     username: "{{ aci_username }}"
    #     password: "{{ aci_password }}"
    #     validate_certs: no
    #     state: query
    #   register: leaf_switch_pair_result
    #
    # - name: Print leaf switch pairs
    #   debug:
    #     var: leaf_switch_pair_result
    #
    # - name: Get a list of all the leaf switch nodes
    #   aci_rest:
    #     host: "{{ inventory_hostname }}"
    #     username: "{{ aci_username }}"
    #     password: "{{ aci_password }}"
    #     method: get
    #     path: /api/node/class/fabricNode.json?query-target-filter=and(eq(fabricNode.role,"leaf"))
    #     validate_certs: no
    #   register: all_nodes
    #
    # - name: Print leaf switch nodes
    #   debug:
    #     var: all_nodes

    #url: https://apic27-sim-2-a.intranet.local/api/node/mo/uni/infra.json?query-target=subtree&target-subtree-class=infraAccPortP&query-target-filter=not(wcard(polUni.dn, "__ui_"))&target-subtree-class=infraFexP,infraHPortS,infraPortBlk,infraSubPortBlk&query-target=subtree
    - name: Query for all Leaf Interface Profiles
      aci_rest:
        host: "{{ inventory_hostname }}"
        username: "{{ aci_username }}"
        password: "{{ aci_password }}"
        path: /api/node/mo/uni/infra.json?query-target=subtree&target-subtree-class=infraAccPortP&query-target-filter=not(wcard(polUni.dn, "__ui_"))&target-subtree-class=infraFexP,infraHPortS,infraPortBlk,infraSubPortBlk&query-target=subtree
        method: get
        # output_level: debug
        validate_certs: no
      register: leaf_interface_profile_result

    - name: Print Leaf Interface Result
      debug:
        var: leaf_interface_profile_result

    - name: Print Leaf Interface Profiles
      debug:
        var: leaf_interface_profile_result.imdata
      # loop: "{{leaf_interface_profile_result.imdata}}"




    - name: Query for all ports on the switch pairs
     #GET {{apic}}/node/class/infraHPortS.json?query-target-filter=and(wcard(infraHPortS.dn,"{{node_id}}"),eq(infraPortBlk.descr, "open"))&query-target=subtree&rsp-subtree=children&target-subtree-class=infraPortBlk
      aci_rest:
        host: "{{ inventory_hostname }}"
        username: "{{ aci_username }}"
        password: "{{ aci_password }}"
        # path: /api/node/mo/uni/infra/accportprof-201-IfProf.json?query-target=children&target-subtree-class=infraHPortS&query-target-filter=not(wcard(polUni.dn, "__ui_"))&subscription=yes
        path: /api/node/mo/uni/infra/accportprof-201-IfProf.json?query-target=children&target-subtree-class=infraHPortS&query-target-filter=not(wcard(polUni.dn, "__ui_"))
        method: get
        output_level: debug
        validate_certs: no
      register: open_port_result

    - name: Print open ports
      debug:
        var: open_port_result

    - name: Query port details
      aci_access_port_to_interface_policy_leaf_profile:
        host: "{{ inventory_hostname }}"
        username: "{{ aci_username }}"
        password: "{{ aci_password }}"
        leaf_interface_profile: 201-IfProf
        leaf_port_blk: Interfaces
        access_port_selector: "1:2-IfSel"
        from_port: 1
        to_port: 48
        state: query
        validate_certs: no
      register: port_details_result

    - name: Print out Port details
      debug:
        var: port_details_result

    # TODO
    #- name: Choose open ports to Configure

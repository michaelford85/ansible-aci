---
- name: Configure uplinks from ESXi host
  hosts: "{{ apic }}"
  connection: local
  gather_facts: no
  vars_files:
    - ./vars/configure_uplinks_vars.yml
    - ./credentials/aci_credentials.yml


  tasks:

      #endpoint: https://{{ inventory_hostname }}/api/node/mo/uni/infra.json?query-target=subtree&target-subtree-class=infraAccPortP&query-target-filter=not(wcard(polUni.dn, "__ui_"))&target-subtree-class=infraAccPortP&query-target=subtree
    - name: Query for all leaf switches
      aci_rest:
        host: "{{ inventory_hostname }}"
        username: "{{ aci_username }}"
        password: "{{ aci_password }}"
        method: get
        path: /api/node/mo/uni/infra.json?query-target=subtree&target-subtree-class=infraAccPortP&query-target-filter=not(wcard(polUni.dn, "__ui_"))&target-subtree-class=infraAccPortP&query-target=subtree
        output_level: debug
        validate_certs: no
      register: leaf_switches_result

    - name: Print leaf switch nodes
      debug:
        var: leaf_switches_result


    # TODO: Comment this out when no longer needed
    - name: Print leaf switch node short name
      debug:
        msg: "{{ item [:3] }}"
      loop: "{{leaf_switches_result | json_query('imdata[*].infraAccPortP.attributes.name') }}"

    - name: Delete any existing open port variable file
      file:
        path: "{{ playbook_dir }}/vars/{{ item [:3] }}_open_ports.yml"
        state: absent
      loop: "{{leaf_switches_result | json_query('imdata[*].infraAccPortP.attributes.name') }}"

    - name: Create variable file to contain open ports
      copy:
        dest: "{{ playbook_dir }}/vars/{{ item [:3] }}_open_ports.yml"
        content: |
          ---
          "{{ item [:3] }}_open_ports:"

      loop: "{{leaf_switches_result | json_query('imdata[*].infraAccPortP.attributes.name') }}"

      #endpoint: https://{{ inventory_hostname }}/api/node/class/infraHPortS.json?query-target-filter=and(wcard(infraHPortS.dn,"202"),eq(infraPortBlk.descr, "open"))&query-target=subtree&rsp-subtree=children&target-subtree-class=infraPortBlk
      #NOTE: For each switch, this task appends the open port objects to leaf_interface_profile_result
    - name: Query for all open ports
      aci_rest:
        host: "{{ inventory_hostname }}"
        username: "{{ aci_username }}"
        password: "{{ aci_password }}"
        # path: "/api/node/class/infraHPortS.json?query-target-filter=and(wcard(infraHPortS.dn,\"202\"),eq(infraPortBlk.descr, \"open\"))&query-target=subtree&rsp-subtree=children&target-subtree-class=infraPortBlk"
        path: "/api/node/class/infraHPortS.json?query-target-filter=and(wcard(infraHPortS.dn, \"{{ item [:3] }}\"),eq(infraPortBlk.descr, \"open\"))&query-target=subtree&rsp-subtree=children&target-subtree-class=infraPortBlk"
        method: get
        output_level: debug
        validate_certs: no
      register: leaf_interface_profile_result
      loop: "{{leaf_switches_result | json_query('imdata[*].infraAccPortP.attributes.name') }}"


    - name: Print Leaf Interface Result
      debug:
        var: leaf_interface_profile_result

    # - name: populate open port txt file
    #   copy:
    #     content: "{{ leaf_interface_profile_result }}"
    #     dest: "{{ playbook_dir }}/vars/{{ item [:3] }}_open_ports.txt"
    #   loop: "{{leaf_switches_result | json_query('imdata[*].infraAccPortP.attributes.name') }}"




    #infraPortBlk.descr is the value we care about here
    # - name: Print Open Port Names
    #   debug:
    #     msg: "Interface name: {{ item }}"
    #   loop: "{{leaf_interface_profile_result | json_query('imdata[*].infraPortBlk.attributes.dn') }}"











































    # - name: Query for all ports on the switch pairs
    #  #GET {{apic}}/node/class/infraHPortS.json?query-target-filter=and(wcard(infraHPortS.dn,"{{node_id}}"),eq(infraPortBlk.descr, "open"))&query-target=subtree&rsp-subtree=children&target-subtree-class=infraPortBlk
    #   aci_rest:
    #     host: "{{ inventory_hostname }}"
    #     username: "{{ aci_username }}"
    #     password: "{{ aci_password }}"
    #     # path: /api/node/mo/uni/infra/accportprof-201-IfProf.json?query-target=children&target-subtree-class=infraHPortS&query-target-filter=not(wcard(polUni.dn, "__ui_"))&subscription=yes
    #     path: /api/node/mo/uni/infra/accportprof-201-IfProf.json?query-target=children&target-subtree-class=infraHPortS&query-target-filter=not(wcard(polUni.dn, "__ui_"))
    #     method: get
    #     output_level: debug
    #     validate_certs: no
    #   register: open_port_result
    #
    # - name: Print open ports
    #   debug:
    #     var: open_port_result
    #
    # - name: Query port details
    #   aci_access_port_to_interface_policy_leaf_profile:
    #     host: "{{ inventory_hostname }}"
    #     username: "{{ aci_username }}"
    #     password: "{{ aci_password }}"
    #     leaf_interface_profile: 201-IfProf
    #     leaf_port_blk: Interfaces
    #     access_port_selector: "1:2-IfSel"
    #     from_port: 1
    #     to_port: 48
    #     state: query
    #     validate_certs: no
    #   register: port_details_result
    #
    # - name: Print out Port details
    #   debug:
    #     var: port_details_result
    #
    # # TODO
    # #- name: Choose open ports to Configure





# {{apic}}/node/class/infraHPortS.json?query-target-filter=and(wcard(infraHPortS.dn,"{{node_id}}"),eq(infraPortBlk.descr, "open"))&query-target=subtree&rsp-subtree=children&target-subtree-class=infraPortBlk
